{
  "info": {
    "_postman_id": "8faeb394-3a4b-41d7-b30c-595aea5f30cd",
    "name": "udacity-fsnd-udaspicelatte",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "19564799"
  },
  "item": [
    {
      "name": "public",
      "item": [
        {
          "name": "/drinks",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{host}}/drinks",
              "host": [
                "{{host}}"
              ],
              "path": [
                "drinks"
              ]
            }
          },
          "response": []
        },
        {
          "name": "/drinks-detail",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401 since no credentials are present\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{host}}/drinks-detail",
              "host": [
                "{{host}}"
              ],
              "path": [
                "drinks-detail"
              ]
            }
          },
          "response": []
        },
        {
          "name": "/drinks",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401 since no credentials are present\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{host}}/drinks",
              "host": [
                "{{host}}"
              ],
              "path": [
                "drinks"
              ]
            }
          },
          "response": []
        },
        {
          "name": "/drinks/1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401 since no credentials are present\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{host}}/drinks/1",
              "host": [
                "{{host}}"
              ],
              "path": [
                "drinks",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "/drinks/1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401 since no credentials are present\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{host}}/drinks/1",
              "host": [
                "{{host}}"
              ],
              "path": [
                "drinks",
                "1"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "barista",
      "item": [
        {
          "name": "/drinks",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"value contains drinks array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.drinks).to.be.an('array')",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{host}}/drinks",
              "host": [
                "{{host}}"
              ],
              "path": [
                "drinks"
              ]
            }
          },
          "response": []
        },
        {
          "name": "/drinks-detail",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{host}}/drinks-detail",
              "host": [
                "{{host}}"
              ],
              "path": [
                "drinks-detail"
              ]
            }
          },
          "response": []
        },
        {
          "name": "/drinks",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"title\": \"Water3\",\r\n    \"recipe\": {\r\n        \"name\": \"Water\",\r\n        \"color\": \"blue\",\r\n        \"parts\": 1\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/drinks",
              "host": [
                "{{host}}"
              ],
              "path": [
                "drinks"
              ]
            }
          },
          "response": []
        },
        {
          "name": "/drinks/1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{host}}/drinks/1",
              "host": [
                "{{host}}"
              ],
              "path": [
                "drinks",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "/drinks/1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{host}}/drinks/1",
              "host": [
                "{{host}}"
              ],
              "path": [
                "drinks",
                "1"
              ]
            }
          },
          "response": []
        }
      ],
      "auth": {
        "type": "bearer",
        "bearer": [
          {
            "key": "token",
            "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6InluS1N2V2ZpdkhUVFJuSVV5TGpsVCJ9.eyJpc3MiOiJodHRwczovL2Rldi1iZzhsMnVxYy51cy5hdXRoMC5jb20vIiwic3ViIjoiZ29vZ2xlLW9hdXRoMnwxMTUzMjQyOTczODc5NjcwNzMyMTUiLCJhdWQiOiJ1ZGFjaXR5IiwiaWF0IjoxNjU3ODMwNDc1LCJleHAiOjE2NTc5MTY4NzQsImF6cCI6Ik5NcXZIT2VvdzQzNzl1aTJsME03UElHeGpydXQ3VUZPIiwic2NvcGUiOiIiLCJwZXJtaXNzaW9ucyI6WyJnZXQ6ZHJpbms6ZGV0YWlscyIsImdldDpkcmlua3MiXX0.W3flaGn3AsOciLRYAUGg-NtBFf6RuX7UNg3Fce58UyC7pyh3RXTL4yWHz9TkJGhYb47GtObrKRFm6qsXHfgYObMWYbHoojhyP0NIEPjKPjp6ZaEQnuXZw4y95B517lf1BRVhWVwveiTyyBOP5Sk8Fp5Z6RfbLfUekkuc9s4BZzsxeK7ec_17xzEx8GUHHFwe4f2Q1yj0geXlh3FlfR0NbdjC8SdmLPngbVgWScoL7dNrI0hjwMMBj_yCCRymANFgFiyOGCNhkZY2rr3KtmD4PQTc4xzzWDHkYZ8h2gYaPe0rZNt2KcnRUbUgS4sIZusEtIfxYRY115V6EI94vgEHAQ",
            "type": "string"
          }
        ]
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "manager",
      "item": [
        {
          "name": "/drinks",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"value contains drinks array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.drinks).to.be.an('array')",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{host}}/drinks",
              "host": [
                "{{host}}"
              ],
              "path": [
                "drinks"
              ]
            }
          },
          "response": []
        },
        {
          "name": "/drinks-detail",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"value contains drinks array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.drinks).to.be.an('array')",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{host}}/drinks-detail",
              "host": [
                "{{host}}"
              ],
              "path": [
                "drinks-detail"
              ]
            }
          },
          "response": []
        },
        {
          "name": "/drinks",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Water3\",\n    \"recipe\": {\n        \"name\": \"Water\",\n        \"color\": \"blue\",\n        \"parts\": 1\n    }\n}"
            },
            "url": {
              "raw": "{{host}}/drinks",
              "host": [
                "{{host}}"
              ],
              "path": [
                "drinks"
              ]
            }
          },
          "response": []
        },
        {
          "name": "/drinks/1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"value contains drinks array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.drinks).to.be.an('array')",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Water5\"\n}"
            },
            "url": {
              "raw": "{{host}}/drinks/1",
              "host": [
                "{{host}}"
              ],
              "path": [
                "drinks",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "/drinks/1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{host}}/drinks/1",
              "host": [
                "{{host}}"
              ],
              "path": [
                "drinks",
                "1"
              ]
            }
          },
          "response": []
        }
      ],
      "auth": {
        "type": "bearer",
        "bearer": [
          {
            "key": "token",
            "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6InluS1N2V2ZpdkhUVFJuSVV5TGpsVCJ9.eyJpc3MiOiJodHRwczovL2Rldi1iZzhsMnVxYy51cy5hdXRoMC5jb20vIiwic3ViIjoiZ29vZ2xlLW9hdXRoMnwxMDE5MzEyMDM3MzQxNzA2MTU2MzUiLCJhdWQiOiJ1ZGFjaXR5IiwiaWF0IjoxNjU3ODMwMzA1LCJleHAiOjE2NTc5MTY3MDQsImF6cCI6Ik5NcXZIT2VvdzQzNzl1aTJsME03UElHeGpydXQ3VUZPIiwic2NvcGUiOiIiLCJwZXJtaXNzaW9ucyI6WyJkZWxldGU6ZHJpbmtzIiwiZ2V0OmRyaW5rOmRldGFpbHMiLCJnZXQ6ZHJpbmtzIiwicGF0Y2g6ZHJpbmtzIiwicG9zdDpkcmlua3MiXX0.mMTsL_mAUykikldlBmjrR6sUXrWGaNhPa-SfhrXJrgsAG4j1mqq_5gZC88zpc7VvAqy5WF7R7jRBvKUM2_H9NFkOmlnFe7Oo6Hnznt4Br_N7j6Um8IopeZxUrdXRpDBDxU6fi6gPqBRAVJHSeJBjSZUHvQsn_0GPzDkGdpEBmq9FOjQRkPAVgnQwef4C99apIdtBTZRU23TtYEASvjjwrwRi7rBmf_l-Wh6ck1EdXXVwGONbkzbIGJTfTERCGZlccLq9nEaZNCliuYolpYBgqeHAex7GAoot60RYWHrgmsK9n0obGytxLKkWMWPprvwHSz1zVBGSPzMK7aBOmpZ_gg",
            "type": "string"
          }
        ]
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "host",
      "value": "localhost:5000",
      "type": "string"
    }
  ]
}